name: PSI4 build and deploy

on:
  push:
    branches:
      - 'develop'
    paths:
      - '.github/workflows/psi4-build-deploy.yml'
      - 'psi4/docker/**'
      - 'psi4/singularity/**'      
  pull_request:
    paths:
      - '.github/workflows/psi4-build-deploy.yml'
      - 'psi4/docker/**'
      - 'psi4/singularity/**'
    branches:
      - 'develop'

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Set up Git repository
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/psi4-docker
    - name: Build Docker image
      if: ${{ github.event_name == 'pull_request' }}
      uses: docker/build-push-action@v3
      with:
        context: .
        file: psi4/docker/Dockerfile
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Build and push Docker image
      if: ${{ github.event_name == 'push' && github.tef == 'refs/heads/develop' }}
      uses: docker/build-push-action@v3
      with:
        context: .
        file: psi4/docker/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  singularity:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Git repository
      uses: actions/checkout@v3
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Install Dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y \
          build-essential \
          libssl-dev \
          uuid-dev \
          libgpgme11-dev \
          squashfs-tools \
          libseccomp-dev \
          pkg-config       
    - name: Install Singularity
      env:
        SINGULARITY_VERSION: 3.8.1
        GOPATH: /tmp/go
      run: |
        mkdir -p $GOPATH
        sudo mkdir -p /usr/local/var/singularity/mnt && \
        mkdir -p $GOPATH/src/github.com/sylabs && \
        cd $GOPATH/src/github.com/sylabs && \
        wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz | \
        tar xzv && \
        cd singularity-ce-${SINGULARITY_VERSION} && \
        ./mconfig -p /usr/local && \
        make -C builddir && \
        sudo make -C builddir install  
    - name: Build container
      run: |
        sudo -E singularity build psi4-singularity.sif ./psi4/singularity/Singularityfile
    - name: Log in to registry and deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | singularity remote login -u $ --password-stdin oras://ghcr.io
        singularity push psi4-singularity.sif oras://ghcr.io/psi4-singularity    
